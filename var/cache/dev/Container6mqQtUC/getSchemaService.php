<?php

namespace Container6mqQtUC;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSchemaService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'TheCodingMachine\GraphQLite\Schema' shared autowired service.
     *
     * @return \TheCodingMachine\GraphQLite\Schema
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/webonyx/graphql-php/src/Type/Schema.php';
        include_once \dirname(__DIR__, 4).'/vendor/thecodingmachine/graphqlite/src/Schema.php';
        include_once \dirname(__DIR__, 4).'/vendor/thecodingmachine/graphqlite/src/SchemaFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/thecodingmachine/graphqlite/src/Security/AuthenticationServiceInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/thecodingmachine/graphqlite-bundle/Security/AuthenticationService.php';
        include_once \dirname(__DIR__, 4).'/vendor/thecodingmachine/graphqlite/src/Security/AuthorizationServiceInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/thecodingmachine/graphqlite-bundle/Security/AuthorizationService.php';
        include_once \dirname(__DIR__, 4).'/vendor/thecodingmachine/graphqlite/src/QueryProviderFactoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/thecodingmachine/graphqlite/src/AggregateControllerQueryProviderFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/thecodingmachine/graphqlite/src/Mappers/Parameters/ParameterMiddlewareInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/thecodingmachine/graphqlite-bundle/Mappers/RequestParameterMiddleware.php';
        include_once \dirname(__DIR__, 4).'/vendor/thecodingmachine/graphqlite-symfony-validator-bridge/src/Mappers/Parameters/AssertParameterMiddleware.php';
        include_once \dirname(__DIR__, 4).'/vendor/thecodingmachine/graphqlite/src/Mappers/TypeMapperInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/thecodingmachine/graphqlite/src/Mappers/StaticTypeMapper.php';
        include_once \dirname(__DIR__, 4).'/vendor/thecodingmachine/graphqlite/src/Mappers/TypeMapperFactoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/thecodingmachine/graphqlite/src/Mappers/StaticClassListTypeMapperFactory.php';

        $a = new \TheCodingMachine\GraphQLite\SchemaFactory(($container->privates['graphqlite.psr16cache'] ?? $container->load('getGraphqlite_Psr16cacheService')), $container);

        $b = ($container->services['security.token_storage'] ?? $container->getSecurity_TokenStorageService());

        $a->setAuthenticationService(new \TheCodingMachine\Graphqlite\Bundle\Security\AuthenticationService($b));
        $a->setAuthorizationService(new \TheCodingMachine\Graphqlite\Bundle\Security\AuthorizationService(($container->services['security.authorization_checker'] ?? $container->getSecurity_AuthorizationCheckerService()), $b));
        $a->devMode();
        $a->addControllerNamespace('App\\GraphqlController\\');
        $a->addTypeNamespace('App\\Types\\');
        $a->addTypeNamespace('App\\Entity\\');
        $a->addQueryProviderFactory(new \TheCodingMachine\GraphQLite\AggregateControllerQueryProviderFactory([0 => 'TheCodingMachine\\Graphqlite\\Bundle\\Controller\\GraphQL\\LoginController', 1 => 'TheCodingMachine\\Graphqlite\\Bundle\\Controller\\GraphQL\\MeController'], $container));
        $a->addParameterMiddleware(new \TheCodingMachine\Graphqlite\Bundle\Mappers\RequestParameterMiddleware());
        $a->addParameterMiddleware(new \TheCodingMachine\Graphqlite\Validator\Mappers\Parameters\AssertParameterMiddleware(($container->privates['validator.validator_factory'] ?? $container->getValidator_ValidatorFactoryService()), ($container->services['validator'] ?? $container->getValidatorService()), ($container->services['translator'] ?? $container->getTranslatorService())));
        $a->addTypeMapper(new \TheCodingMachine\GraphQLite\Mappers\StaticTypeMapper());
        $a->addTypeMapperFactory(new \TheCodingMachine\GraphQLite\Mappers\StaticClassListTypeMapperFactory([0 => 'TheCodingMachine\\Graphqlite\\Bundle\\Types\\SymfonyUserInterfaceType']));

        return $container->services['TheCodingMachine\\GraphQLite\\Schema'] = $a->createSchema();
    }
}
