<?php

namespace ContainerTpY3wNE;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getApiPlatform_Graphql_Resolver_Factory_ItemService extends App_KernelTestDebugContainer
{
    /**
     * Gets the private 'api_platform.graphql.resolver.factory.item' shared service.
     *
     * @return \ApiPlatform\Core\GraphQl\Resolver\Factory\ItemResolverFactory
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/api-platform/core/src/GraphQl/Resolver/Factory/ResolverFactoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/api-platform/core/src/GraphQl/Resolver/Factory/ItemResolverFactory.php';

        return $container->privates['api_platform.graphql.resolver.factory.item'] = new \ApiPlatform\Core\GraphQl\Resolver\Factory\ItemResolverFactory(($container->privates['api_platform.graphql.resolver.stage.read'] ?? $container->load('getApiPlatform_Graphql_Resolver_Stage_ReadService')), ($container->privates['api_platform.graphql.resolver.stage.security'] ?? $container->load('getApiPlatform_Graphql_Resolver_Stage_SecurityService')), ($container->privates['api_platform.graphql.resolver.stage.security_post_denormalize'] ?? $container->load('getApiPlatform_Graphql_Resolver_Stage_SecurityPostDenormalizeService')), ($container->privates['api_platform.graphql.resolver.stage.serialize'] ?? $container->load('getApiPlatform_Graphql_Resolver_Stage_SerializeService')), ($container->privates['api_platform.graphql.query_resolver_locator'] ?? ($container->privates['api_platform.graphql.query_resolver_locator'] = new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [], []))), ($container->privates['api_platform.metadata.resource.metadata_factory.cached'] ?? $container->getApiPlatform_Metadata_Resource_MetadataFactory_CachedService()));
    }
}
