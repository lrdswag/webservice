<?php

namespace Container5ATxelD;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSchemaFactoryService extends App_KernelTestDebugContainer
{
    /**
     * Gets the private 'TheCodingMachine\GraphQLite\SchemaFactory' shared autowired service.
     *
     * @return \TheCodingMachine\GraphQLite\SchemaFactory
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/thecodingmachine/graphqlite/src/SchemaFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/thecodingmachine/graphqlite/src/QueryProviderFactoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/thecodingmachine/graphqlite/src/AggregateControllerQueryProviderFactory.php';
        include_once \dirname(__DIR__, 4).'/vendor/thecodingmachine/graphqlite/src/Mappers/Parameters/ParameterMiddlewareInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/thecodingmachine/graphqlite-bundle/Mappers/RequestParameterMiddleware.php';
        include_once \dirname(__DIR__, 4).'/vendor/thecodingmachine/graphqlite/src/Mappers/TypeMapperInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/thecodingmachine/graphqlite/src/Mappers/StaticTypeMapper.php';
        include_once \dirname(__DIR__, 4).'/vendor/thecodingmachine/graphqlite/src/Mappers/TypeMapperFactoryInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/thecodingmachine/graphqlite/src/Mappers/StaticClassListTypeMapperFactory.php';

        $container->privates['TheCodingMachine\\GraphQLite\\SchemaFactory'] = $instance = new \TheCodingMachine\GraphQLite\SchemaFactory(($container->privates['graphqlite.psr16cache'] ?? $container->load('getGraphqlite_Psr16cacheService')), $container);

        $instance->setAuthenticationService(($container->privates['TheCodingMachine\\Graphqlite\\Bundle\\Security\\AuthenticationService'] ?? $container->load('getAuthenticationServiceService')));
        $instance->setAuthorizationService(($container->privates['TheCodingMachine\\Graphqlite\\Bundle\\Security\\AuthorizationService'] ?? $container->load('getAuthorizationServiceService')));
        $instance->addControllerNamespace('App\\GraphqlController\\');
        $instance->addTypeNamespace('App\\Types\\');
        $instance->addTypeNamespace('App\\Entity\\');
        $instance->addQueryProviderFactory(($container->privates['TheCodingMachine\\GraphQLite\\AggregateControllerQueryProviderFactory'] ?? ($container->privates['TheCodingMachine\\GraphQLite\\AggregateControllerQueryProviderFactory'] = new \TheCodingMachine\GraphQLite\AggregateControllerQueryProviderFactory([0 => 'TheCodingMachine\\Graphqlite\\Bundle\\Controller\\GraphQL\\LoginController', 1 => 'TheCodingMachine\\Graphqlite\\Bundle\\Controller\\GraphQL\\MeController'], $container))));
        $instance->addParameterMiddleware(($container->privates['TheCodingMachine\\Graphqlite\\Bundle\\Mappers\\RequestParameterMiddleware'] ?? ($container->privates['TheCodingMachine\\Graphqlite\\Bundle\\Mappers\\RequestParameterMiddleware'] = new \TheCodingMachine\Graphqlite\Bundle\Mappers\RequestParameterMiddleware())));
        $instance->addParameterMiddleware(($container->privates['TheCodingMachine\\Graphqlite\\Validator\\Mappers\\Parameters\\AssertParameterMiddleware'] ?? $container->load('getAssertParameterMiddlewareService')));
        $instance->addTypeMapper(($container->privates['TheCodingMachine\\GraphQLite\\Mappers\\StaticTypeMapper'] ?? ($container->privates['TheCodingMachine\\GraphQLite\\Mappers\\StaticTypeMapper'] = new \TheCodingMachine\GraphQLite\Mappers\StaticTypeMapper())));
        $instance->addTypeMapperFactory(($container->privates['TheCodingMachine\\GraphQLite\\Mappers\\StaticClassListTypeMapperFactory'] ?? ($container->privates['TheCodingMachine\\GraphQLite\\Mappers\\StaticClassListTypeMapperFactory'] = new \TheCodingMachine\GraphQLite\Mappers\StaticClassListTypeMapperFactory([0 => 'TheCodingMachine\\Graphqlite\\Bundle\\Types\\SymfonyUserInterfaceType']))));

        return $instance;
    }
}
